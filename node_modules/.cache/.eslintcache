[{"C:\\Users\\17192\\reactProjects\\finalPort\\src\\index.js":"1","C:\\Users\\17192\\reactProjects\\finalPort\\src\\App.js":"2","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\ContactForm.js":"3","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\index.js":"4","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Work.js":"5","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Navigation.js":"6","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Footer.js":"7","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Home.js":"8","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Post.js":"9"},{"size":156,"mtime":1624983066000,"results":"10","hashOfConfig":"11"},{"size":643,"mtime":1624983066000,"results":"12","hashOfConfig":"11"},{"size":4470,"mtime":1624992509691,"results":"13","hashOfConfig":"11"},{"size":185,"mtime":1624983066000,"results":"14","hashOfConfig":"11"},{"size":101,"mtime":1624983066000,"results":"15","hashOfConfig":"11"},{"size":942,"mtime":1624994328940,"results":"16","hashOfConfig":"11"},{"size":357,"mtime":1624983066000,"results":"17","hashOfConfig":"11"},{"size":3539,"mtime":1624993948360,"results":"18","hashOfConfig":"11"},{"size":1919,"mtime":1624983066000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"7agftx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\17192\\reactProjects\\finalPort\\src\\index.js",[],["42","43"],"C:\\Users\\17192\\reactProjects\\finalPort\\src\\App.js",[],"C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\ContactForm.js",["44"],"import { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst ContactForm = () => {\n  const { register, errors, handleSubmit, reset } = useForm();\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  const onSubmit = async (data) => {\n    // Send form email\n    try {\n      const templateParams = {\n        name: data.name,\n        email: data.email,\n        subject: data.subject,\n        message: data.message\n      };\n\n      await emailjs.send(\n        'service_59ne85j',\n        'template_7p1hni4',\n        templateParams,\n        'user_3tpPmE2mQehL0DomGKYQz'\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className='ContactForm'>\n      <div className='ContactContainer'>\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <div className='contactForm'>\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n                {/* Row 1 of form */}\n                <div className='row formRow'>\n                  <div className='col-6'>\n                    <input\n                      type='text'\n                      {...register('name', {\n                        required: { value: true, message: 'Please enter your name' },\n                        maxLength: {\n                          value: 30,\n                          message: 'Please use 30 characters or less'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Name'></input>\n                    {/* {errors.name && <span className='errorMessage'>{errors.name.message}</span>} */}\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='email'\n                      {...register('email', {\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                      })}\n                      className='form-control formInput'\n                      placeholder='Email address'></input>\n                    {/* {errors.email && (\n                      <span className='errorMessage'>Please enter a valid email address</span>\n                    )} */}\n                  </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <input\n                      type='text'\n                      {...register('subject', {\n                        required: { value: true, message: 'Please enter a subject' },\n                        maxLength: {\n                          value: 75,\n                          message: 'Subject cannot exceed 75 characters'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Business Name'></input>\n                    {/* {errors.subject && (\n                      <span className='errorMessage'>{errors.subject.message}</span>\n                    )} */}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <textarea\n                      rows={3}\n                      {...register('message', {\n                        required: true\n                      })}\n                      className='form-control formInput'\n                      placeholder='Tell me about your business'></textarea>\n                    {/* {errors.message && <span className='errorMessage'>Please enter a message</span>} */}\n                  </div>\n                </div>\n                <button className='submit-btn button' type='submit'>\n                  Submit\n                </button>\n              </form>\n            </div>\n           <ToastContainer></ToastContainer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\index.js",[],"C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Work.js",[],"C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Navigation.js",[],"C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Footer.js",[],"C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Home.js",["45","46","47","48"],"import * as THREE from \"three\"\nimport React, { Suspense, useState, useCallback } from \"react\"\nimport { Canvas, useFrame, useThree, useLoader } from \"@react-three/fiber\"\nimport { Physics, usePlane, useSphere } from \"@react-three/cannon\"\n\nimport Post from \"./Post\"\nimport texUrl from \"./tex.jpg\"\nimport { Html } from \"@react-three/drei\"\n\n// A physical sphere tied to mouse coordinates without visual representation\nfunction Mouse() {\n  const { viewport } = useThree()\n  const [, api] = useSphere(() => ({ type: \"Kinematic\", args: 7.5 }))\n  return useFrame(state =>\n    api.position.set((state.mouse.x * viewport.width) / 2, (state.mouse.y * viewport.height) / 2, 7),\n  )\n}\n\n// A physical plane without visual representation\nfunction Plane({ color, ...props }) {\n  usePlane(() => ({ ...props }))\n  return null\n}\n\n// Creates a crate that catches the spheres\nfunction Borders() {\n  const { viewport } = useThree()\n  return (\n    <>\n      <Plane position={[0, -viewport.height / 2, 0]} rotation={[-Math.PI / 2, 0, 0]} />\n      <Plane position={[-viewport.width / 2 - 1, 0, 0]} rotation={[0, Math.PI / 2, 0]} />\n      <Plane position={[viewport.width / 2 + 1, 0, 0]} rotation={[0, -Math.PI / 2, 0]} />\n      <Plane position={[0, 0, 0]} rotation={[0, 0, 0]} />\n      <Plane position={[0, 0, 12]} rotation={[0, -Math.PI, 0]} />\n    </>\n  )\n}\n\n// Spheres falling down\nfunction InstancedSpheres({ count = 250 }) {\n  const { viewport } = useThree()\n  const texture = useLoader(THREE.TextureLoader, texUrl)\n  const [ref] = useSphere(index => ({\n    mass: 100,\n    position: [4 - Math.random() * 8, viewport.height, 0, 0],\n    args: 1\n  }))\n  return (\n    <instancedMesh ref={ref} castShadow receiveShadow args={[null, null, count]}>\n      <sphereBufferGeometry args={[1, Math.random(), Math.random()]} />\n      <meshPhysicalMaterial color=\"#fff\"  clearcoat={10} clearcoatRoughness={0} />\n    </instancedMesh>\n  )\n}\n\nexport default function Home() {\n  return (\n<div className=\"main\">\n    <Canvas\n      concurrent\n      shadowMap\n      gl={{ alpha: true, antialias: true }}\n      camera={{ position: [0, 0, 20], fov: 50, near: 17, far: 40 }}>\n      <fog attach=\"fog\" args={[\"#d94575\", 10, 40]} />\n      {/* <color attach=\"background\" args={[\"red\"]} /> */}\n      <ambientLight intensity={0.8} />\n      <directionalLight\n        position={[50, 50, 25]}\n        angle={0.3}\n        intensity={2}\n        castShadow\n        shadow-mapSize-width={100}\n        shadow-mapSize-height={100}\n        shadow-camera-left={-10}\n        shadow-camera-right={10}\n        shadow-camera-top={10}\n        shadow-camera-bottom={-10}\n      />\n      <directionalLight position={[-10, -10, -5]} intensity={0.5} />\n      <Suspense fallback={null}>\n        <Physics gravity={[0, -20, 0]} defaultContactMaterial={{ restitution: 0.6 }}>\n          <group position={[0, 0, -10]}>\n            <Mouse />\n            <Borders />\n            <InstancedSpheres />\n          </group>\n        </Physics>\n        <Post />\n\n      </Suspense>\n\n    </Canvas>\n    <div className=\"hire-section\">\n        <h2 className=\"hire-section__title\">Hello, my name is Ian.</h2>\n        <p>I am studying Computer Science at Arizona State University,</p>\n        <p>\n          <strong>I love working with JavaScript, React, Three.js, and Node.js,</strong>\n        </p>\n        <p>contact me to create a beautiful and interactive web experience for your Valley business!</p>\n        <a href=\"https://ian-m.xyz/contact\" className=\"button\">\n          reach me\n        </a>\n      </div>\n    </div>\n    \n\n  );\n}","C:\\Users\\17192\\reactProjects\\finalPort\\src\\components\\Post.js",["49","50"],"import React, { Suspense, useMemo, useEffect } from \"react\"\nimport { useLoader, useThree, useFrame } from \"@react-three/fiber\"\nimport {\n  SMAAImageLoader,\n  BlendFunction,\n  EffectComposer,\n  EffectPass,\n  RenderPass,\n  SMAAEffect,\n  SSAOEffect,\n  NormalPass,\n} from \"postprocessing\"\n\nfunction Post() {\n  const { gl, scene, camera, size } = useThree()\n  const smaa = useLoader(SMAAImageLoader)\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl)\n    composer.addPass(new RenderPass(scene, camera))\n    const smaaEffect = new SMAAEffect(...smaa)\n    smaaEffect.colorEdgesMaterial.setEdgeDetectionThreshold(0.1)\n\n    const normalPass = new NormalPass(scene, camera)\n    const ssaoEffect = new SSAOEffect(camera, normalPass.renderTarget.texture, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 31, // May get away with less samples\n      rings: 4, // Just make sure this isn't a multiple of samples\n      distanceThreshold: 0.4,\n      distanceFalloff: 0.5,\n      rangeThreshold: 0.5, // Controls sensitivity based on camera view distance **\n      rangeFalloff: 0.01,\n      luminanceInfluence: 0.5,\n      radius: 5, // Spread range\n      intensity: 10,\n      bias: 0.5,\n    })\n\n    // SSAO is supposed to be a subtle effect!\n    ssaoEffect.blendMode.opacity.value = 1.0 // Debug.\n\n    const effectPass = new EffectPass(\n      camera,\n      smaaEffect,\n      ssaoEffect,\n      //new DepthEffect(), // Check if depth looks ok.\n    )\n    effectPass.renderToScreen = true\n    //normalPass.renderToScreen = true // Check if normals look ok.\n    composer.addPass(normalPass)\n    composer.addPass(effectPass)\n    return composer\n  }, [])\n\n  useEffect(() => void composer.setSize(size.width, size.height), [size])\n  return useFrame((_, delta) => composer.render(delta), 1)\n}\n\nexport default function Effect() {\n  return (\n    <Suspense fallback={null}>\n      <Post />\n    </Suspense>\n  )\n}\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":21,"nodeType":"57","messageId":"58","endLine":7,"endColumn":27},{"ruleId":"55","severity":1,"message":"59","line":2,"column":27,"nodeType":"57","messageId":"58","endLine":2,"endColumn":35},{"ruleId":"55","severity":1,"message":"60","line":2,"column":37,"nodeType":"57","messageId":"58","endLine":2,"endColumn":48},{"ruleId":"55","severity":1,"message":"61","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":14},{"ruleId":"55","severity":1,"message":"62","line":42,"column":9,"nodeType":"57","messageId":"58","endLine":42,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":52,"column":6,"nodeType":"65","endLine":52,"endColumn":8,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":54,"column":67,"nodeType":"65","endLine":54,"endColumn":73,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useCallback' is defined but never used.","'Html' is defined but never used.","'texture' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'camera', 'gl', 'scene', and 'smaa'. Either include them or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'composer'. Either include it or remove the dependency array.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [camera, gl, scene, smaa]",{"range":"77","text":"78"},"Update the dependencies array to be: [composer, size]",{"range":"79","text":"80"},[1664,1666],"[camera, gl, scene, smaa]",[1735,1741],"[composer, size]"]