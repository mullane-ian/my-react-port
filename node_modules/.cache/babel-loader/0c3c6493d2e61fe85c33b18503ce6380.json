{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17192\\\\reactProjects\\\\finalPort\\\\src\\\\components\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  const onSubmit = async data => {\n    // Send form email\n    try {\n      const templateParams = {\n        name: data.name,\n        email: data.email,\n        subject: data.subject,\n        message: data.message\n      };\n      await emailjs.send('service_59ne85j', 'template_7p1hni4', templateParams, 'user_3tpPmE2mQehL0DomGKYQz');\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactForm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contactForm\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"contact-form\",\n              onSubmit: handleSubmit(onSubmit),\n              noValidate: true,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    ...register('name', {\n                      required: {\n                        value: true,\n                        message: 'Please enter your name'\n                      },\n                      maxLength: {\n                        value: 30,\n                        message: 'Please use 30 characters or less'\n                      }\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    ...register('email', {\n                      required: true,\n                      pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    ...register('subject', {\n                      required: {\n                        value: true,\n                        message: 'Please enter a subject'\n                      },\n                      maxLength: {\n                        value: 75,\n                        message: 'Subject cannot exceed 75 characters'\n                      }\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Business Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row formRow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    rows: 3,\n                    ...register('message', {\n                      required: true\n                    }),\n                    className: \"form-control formInput\",\n                    placeholder: \"Tell me about your business\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-btn btn\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"oKAnpUyZAKrHAyK19qEcyWWx3sE=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/17192/reactProjects/finalPort/src/components/ContactForm.js"],"names":["useForm","emailjs","ToastContainer","toast","ContactForm","register","errors","handleSubmit","reset","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","templateParams","name","email","subject","message","send","e","console","log","required","value","maxLength","pattern"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst ContactForm = () => {\n  const { register, errors, handleSubmit, reset } = useForm();\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  const onSubmit = async (data) => {\n    // Send form email\n    try {\n      const templateParams = {\n        name: data.name,\n        email: data.email,\n        subject: data.subject,\n        message: data.message\n      };\n\n      await emailjs.send(\n        'service_59ne85j',\n        'template_7p1hni4',\n        templateParams,\n        'user_3tpPmE2mQehL0DomGKYQz'\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className='ContactForm'>\n      <div className='ContactContainer'>\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <div className='contactForm'>\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n                {/* Row 1 of form */}\n                <div className='row formRow'>\n                  <div className='col-6'>\n                    <input\n                      type='text'\n                      {...register('name', {\n                        required: { value: true, message: 'Please enter your name' },\n                        maxLength: {\n                          value: 30,\n                          message: 'Please use 30 characters or less'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Name'></input>\n                    {/* {errors.name && <span className='errorMessage'>{errors.name.message}</span>} */}\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='email'\n                      {...register('email', {\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                      })}\n                      className='form-control formInput'\n                      placeholder='Email address'></input>\n                    {/* {errors.email && (\n                      <span className='errorMessage'>Please enter a valid email address</span>\n                    )} */}\n                  </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <input\n                      type='text'\n                      {...register('subject', {\n                        required: { value: true, message: 'Please enter a subject' },\n                        maxLength: {\n                          value: 75,\n                          message: 'Subject cannot exceed 75 characters'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Business Name'></input>\n                    {/* {errors.subject && (\n                      <span className='errorMessage'>{errors.subject.message}</span>\n                    )} */}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <textarea\n                      rows={3}\n                      {...register('message', {\n                        required: true\n                      })}\n                      className='form-control formInput'\n                      placeholder='Tell me about your business'></textarea>\n                    {/* {errors.message && <span className='errorMessage'>Please enter a message</span>} */}\n                  </div>\n                </div>\n                <button className='submit-btn btn' type='submit'>\n                  Submit\n                </button>\n              </form>\n            </div>\n           <ToastContainer></ToastContainer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}