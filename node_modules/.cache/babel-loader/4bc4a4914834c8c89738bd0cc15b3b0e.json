{"ast":null,"code":"import _construct from\"C:/Users/17192/reactProjects/finalPort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct\";import _toConsumableArray from\"C:/Users/17192/reactProjects/finalPort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{Suspense,useMemo,useEffect}from\"react\";import{useLoader,useThree,useFrame}from\"@react-three/fiber\";import{SMAAImageLoader,BlendFunction,EffectComposer,EffectPass,RenderPass,SMAAEffect,SSAOEffect,NormalPass}from\"postprocessing\";import{jsx as _jsx}from\"react/jsx-runtime\";function Post(){var _useThree=useThree(),gl=_useThree.gl,scene=_useThree.scene,camera=_useThree.camera,size=_useThree.size;var smaa=useLoader(SMAAImageLoader);var composer=useMemo(function(){var composer=new EffectComposer(gl);composer.addPass(new RenderPass(scene,camera));var smaaEffect=_construct(SMAAEffect,_toConsumableArray(smaa));smaaEffect.colorEdgesMaterial.setEdgeDetectionThreshold(0.1);var normalPass=new NormalPass(scene,camera);var ssaoEffect=new SSAOEffect(camera,normalPass.renderTarget.texture,{blendFunction:BlendFunction.MULTIPLY,samples:31,// May get away with less samples\nrings:4,// Just make sure this isn't a multiple of samples\ndistanceThreshold:0.4,distanceFalloff:0.5,rangeThreshold:0.5,// Controls sensitivity based on camera view distance **\nrangeFalloff:0.01,luminanceInfluence:0.5,radius:5,// Spread range\nintensity:10,bias:0.5});// SSAO is supposed to be a subtle effect!\nssaoEffect.blendMode.opacity.value=1.0;// Debug.\nvar effectPass=new EffectPass(camera,smaaEffect,ssaoEffect);effectPass.renderToScreen=true;//normalPass.renderToScreen = true // Check if normals look ok.\ncomposer.addPass(normalPass);composer.addPass(effectPass);return composer;},[]);useEffect(function(){return void composer.setSize(size.width,size.height);},[size]);return useFrame(function(_,delta){return composer.render(delta);},1);}export default function Effect(){return/*#__PURE__*/_jsx(Suspense,{fallback:null,children:/*#__PURE__*/_jsx(Post,{})});}","map":{"version":3,"sources":["C:/Users/17192/reactProjects/finalPort/src/components/Post.js"],"names":["React","Suspense","useMemo","useEffect","useLoader","useThree","useFrame","SMAAImageLoader","BlendFunction","EffectComposer","EffectPass","RenderPass","SMAAEffect","SSAOEffect","NormalPass","Post","gl","scene","camera","size","smaa","composer","addPass","smaaEffect","colorEdgesMaterial","setEdgeDetectionThreshold","normalPass","ssaoEffect","renderTarget","texture","blendFunction","MULTIPLY","samples","rings","distanceThreshold","distanceFalloff","rangeThreshold","rangeFalloff","luminanceInfluence","radius","intensity","bias","blendMode","opacity","value","effectPass","renderToScreen","setSize","width","height","_","delta","render","Effect"],"mappings":"0TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,OAA1B,CAAmCC,SAAnC,KAAoD,OAApD,CACA,OAASC,SAAT,CAAoBC,QAApB,CAA8BC,QAA9B,KAA8C,oBAA9C,CACA,OACEC,eADF,CAEEC,aAFF,CAGEC,cAHF,CAIEC,UAJF,CAKEC,UALF,CAMEC,UANF,CAOEC,UAPF,CAQEC,UARF,KASO,gBATP,C,2CAWA,QAASC,CAAAA,IAAT,EAAgB,eACsBV,QAAQ,EAD9B,CACNW,EADM,WACNA,EADM,CACFC,KADE,WACFA,KADE,CACKC,MADL,WACKA,MADL,CACaC,IADb,WACaA,IADb,CAEd,GAAMC,CAAAA,IAAI,CAAGhB,SAAS,CAACG,eAAD,CAAtB,CACA,GAAMc,CAAAA,QAAQ,CAAGnB,OAAO,CAAC,UAAM,CAC7B,GAAMmB,CAAAA,QAAQ,CAAG,GAAIZ,CAAAA,cAAJ,CAAmBO,EAAnB,CAAjB,CACAK,QAAQ,CAACC,OAAT,CAAiB,GAAIX,CAAAA,UAAJ,CAAeM,KAAf,CAAsBC,MAAtB,CAAjB,EACA,GAAMK,CAAAA,UAAU,YAAOX,UAAP,oBAAqBQ,IAArB,EAAhB,CACAG,UAAU,CAACC,kBAAX,CAA8BC,yBAA9B,CAAwD,GAAxD,EAEA,GAAMC,CAAAA,UAAU,CAAG,GAAIZ,CAAAA,UAAJ,CAAeG,KAAf,CAAsBC,MAAtB,CAAnB,CACA,GAAMS,CAAAA,UAAU,CAAG,GAAId,CAAAA,UAAJ,CAAeK,MAAf,CAAuBQ,UAAU,CAACE,YAAX,CAAwBC,OAA/C,CAAwD,CACzEC,aAAa,CAAEtB,aAAa,CAACuB,QAD4C,CAEzEC,OAAO,CAAE,EAFgE,CAE5D;AACbC,KAAK,CAAE,CAHkE,CAG/D;AACVC,iBAAiB,CAAE,GAJsD,CAKzEC,eAAe,CAAE,GALwD,CAMzEC,cAAc,CAAE,GANyD,CAMpD;AACrBC,YAAY,CAAE,IAP2D,CAQzEC,kBAAkB,CAAE,GARqD,CASzEC,MAAM,CAAE,CATiE,CAS9D;AACXC,SAAS,CAAE,EAV8D,CAWzEC,IAAI,CAAE,GAXmE,CAAxD,CAAnB,CAcA;AACAd,UAAU,CAACe,SAAX,CAAqBC,OAArB,CAA6BC,KAA7B,CAAqC,GAArC,CAAyC;AAEzC,GAAMC,CAAAA,UAAU,CAAG,GAAInC,CAAAA,UAAJ,CACjBQ,MADiB,CAEjBK,UAFiB,CAGjBI,UAHiB,CAAnB,CAMAkB,UAAU,CAACC,cAAX,CAA4B,IAA5B,CACA;AACAzB,QAAQ,CAACC,OAAT,CAAiBI,UAAjB,EACAL,QAAQ,CAACC,OAAT,CAAiBuB,UAAjB,EACA,MAAOxB,CAAAA,QAAP,CACD,CAnCuB,CAmCrB,EAnCqB,CAAxB,CAqCAlB,SAAS,CAAC,iBAAM,KAAKkB,CAAAA,QAAQ,CAAC0B,OAAT,CAAiB5B,IAAI,CAAC6B,KAAtB,CAA6B7B,IAAI,CAAC8B,MAAlC,CAAX,EAAD,CAAuD,CAAC9B,IAAD,CAAvD,CAAT,CACA,MAAOb,CAAAA,QAAQ,CAAC,SAAC4C,CAAD,CAAIC,KAAJ,QAAc9B,CAAAA,QAAQ,CAAC+B,MAAT,CAAgBD,KAAhB,CAAd,EAAD,CAAuC,CAAvC,CAAf,CACD,CAED,cAAe,SAASE,CAAAA,MAAT,EAAkB,CAC/B,mBACE,KAAC,QAAD,EAAU,QAAQ,CAAE,IAApB,uBACE,KAAC,IAAD,IADF,EADF,CAKD","sourcesContent":["import React, { Suspense, useMemo, useEffect } from \"react\"\nimport { useLoader, useThree, useFrame } from \"@react-three/fiber\"\nimport {\n  SMAAImageLoader,\n  BlendFunction,\n  EffectComposer,\n  EffectPass,\n  RenderPass,\n  SMAAEffect,\n  SSAOEffect,\n  NormalPass,\n} from \"postprocessing\"\n\nfunction Post() {\n  const { gl, scene, camera, size } = useThree()\n  const smaa = useLoader(SMAAImageLoader)\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl)\n    composer.addPass(new RenderPass(scene, camera))\n    const smaaEffect = new SMAAEffect(...smaa)\n    smaaEffect.colorEdgesMaterial.setEdgeDetectionThreshold(0.1)\n\n    const normalPass = new NormalPass(scene, camera)\n    const ssaoEffect = new SSAOEffect(camera, normalPass.renderTarget.texture, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 31, // May get away with less samples\n      rings: 4, // Just make sure this isn't a multiple of samples\n      distanceThreshold: 0.4,\n      distanceFalloff: 0.5,\n      rangeThreshold: 0.5, // Controls sensitivity based on camera view distance **\n      rangeFalloff: 0.01,\n      luminanceInfluence: 0.5,\n      radius: 5, // Spread range\n      intensity: 10,\n      bias: 0.5,\n    })\n\n    // SSAO is supposed to be a subtle effect!\n    ssaoEffect.blendMode.opacity.value = 1.0 // Debug.\n\n    const effectPass = new EffectPass(\n      camera,\n      smaaEffect,\n      ssaoEffect,\n      //new DepthEffect(), // Check if depth looks ok.\n    )\n    effectPass.renderToScreen = true\n    //normalPass.renderToScreen = true // Check if normals look ok.\n    composer.addPass(normalPass)\n    composer.addPass(effectPass)\n    return composer\n  }, [])\n\n  useEffect(() => void composer.setSize(size.width, size.height), [size])\n  return useFrame((_, delta) => composer.render(delta), 1)\n}\n\nexport default function Effect() {\n  return (\n    <Suspense fallback={null}>\n      <Post />\n    </Suspense>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}