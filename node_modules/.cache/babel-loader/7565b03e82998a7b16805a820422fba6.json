{"ast":null,"code":"import _objectSpread from\"C:/Users/17192/reactProjects/finalPort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/17192/reactProjects/finalPort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/17192/reactProjects/finalPort/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useForm}from'react-hook-form';import emailjs from'emailjs-com';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.min.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactForm=function ContactForm(){var _useForm=useForm(),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit,reset=_useForm.reset;var toastifySuccess=function toastifySuccess(){toast('Form sent!',{position:'bottom-right',autoClose:5000,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:false,className:'submit-feedback success',toastId:'notifyToast'});};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var templateParams;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;templateParams={name:data.name,email:data.email,subject:data.subject,message:data.message};_context.next=4;return emailjs.send('service_59ne85j','template_7p1hni4',templateParams,'user_3tpPmE2mQehL0DomGKYQz');case 4:reset();toastifySuccess();_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"ContactForm\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ContactContainer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-12 text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contactForm\",children:/*#__PURE__*/_jsxs(\"form\",{id:\"contact-form\",onSubmit:handleSubmit(onSubmit),noValidate:true,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row formRow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-6\",children:/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"text\"},register('name',{required:{value:true,message:'Please enter your name'},maxLength:{value:30,message:'Please use 30 characters or less'}})),{},{className:\"form-control formInput\",placeholder:\"Name\"}))}),/*#__PURE__*/_jsx(\"div\",{className:\"col-6\",children:/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"email\"},register('email',{required:true,pattern:/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/})),{},{className:\"form-control formInput\",placeholder:\"Email address\"}))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row formRow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"text\"},register('subject',{required:{value:true,message:'Please enter a subject'},maxLength:{value:75,message:'Subject cannot exceed 75 characters'}})),{},{className:\"form-control formInput\",placeholder:\"Business Name\"}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"row formRow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({rows:3},register('message',{required:true})),{},{className:\"form-control formInput\",placeholder:\"Tell me about your business\"}))})}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",type:\"submit\",children:\"Submit\"})]})}),/*#__PURE__*/_jsx(ToastContainer,{})]})})})});};export default ContactForm;","map":{"version":3,"sources":["C:/Users/17192/reactProjects/finalPort/src/components/ContactForm.js"],"names":["useForm","emailjs","ToastContainer","toast","ContactForm","register","errors","handleSubmit","reset","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","templateParams","name","email","subject","message","send","console","log","required","value","maxLength","pattern"],"mappings":"mdAAA,OAASA,OAAT,KAAwB,iBAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,aAApB,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,MAAO,2CAAP,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,cAC0BJ,OAAO,EADjC,CAChBK,QADgB,UAChBA,QADgB,CACNC,MADM,UACNA,MADM,CACEC,YADF,UACEA,YADF,CACgBC,KADhB,UACgBA,KADhB,CAGxB,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BN,KAAK,CAAC,YAAD,CAAe,CAClBO,QAAQ,CAAE,cADQ,CAElBC,SAAS,CAAE,IAFO,CAGlBC,eAAe,CAAE,IAHC,CAIlBC,YAAY,CAAE,IAJI,CAKlBC,YAAY,CAAE,IALI,CAMlBC,SAAS,CAAE,KANO,CAOlBC,SAAS,CAAE,yBAPO,CAQlBC,OAAO,CAAE,aARS,CAAf,CAAL,CAUD,CAXD,CAaA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,IAAP,qJAGPC,cAHO,CAGU,CACrBC,IAAI,CAAEF,IAAI,CAACE,IADU,CAErBC,KAAK,CAAEH,IAAI,CAACG,KAFS,CAGrBC,OAAO,CAAEJ,IAAI,CAACI,OAHO,CAIrBC,OAAO,CAAEL,IAAI,CAACK,OAJO,CAHV,uBAUPvB,CAAAA,OAAO,CAACwB,IAAR,CACJ,iBADI,CAEJ,kBAFI,CAGJL,cAHI,CAIJ,4BAJI,CAVO,QAiBbZ,KAAK,GACLC,eAAe,GAlBF,+EAoBbiB,OAAO,CAACC,GAAR,cApBa,oEAAH,kBAART,CAAAA,QAAQ,4CAAd,CAwBA,mBACE,YAAK,SAAS,CAAC,aAAf,uBACE,YAAK,SAAS,CAAC,kBAAf,uBACE,YAAK,SAAS,CAAC,KAAf,uBACE,aAAK,SAAS,CAAC,oBAAf,wBACE,YAAK,SAAS,CAAC,aAAf,uBACE,cAAM,EAAE,CAAC,cAAT,CAAwB,QAAQ,CAAEX,YAAY,CAACW,QAAD,CAA9C,CAA0D,UAAU,KAApE,wBAEE,aAAK,SAAS,CAAC,aAAf,wBACE,YAAK,SAAS,CAAC,OAAf,uBACE,0CACE,IAAI,CAAC,MADP,EAEMb,QAAQ,CAAC,MAAD,CAAS,CACnBuB,QAAQ,CAAE,CAAEC,KAAK,CAAE,IAAT,CAAeL,OAAO,CAAE,wBAAxB,CADS,CAEnBM,SAAS,CAAE,CACTD,KAAK,CAAE,EADE,CAETL,OAAO,CAAE,kCAFA,CAFQ,CAAT,CAFd,MASE,SAAS,CAAC,wBATZ,CAUE,WAAW,CAAC,MAVd,GADF,EADF,cAeE,YAAK,SAAS,CAAC,OAAf,uBACE,0CACE,IAAI,CAAC,OADP,EAEMnB,QAAQ,CAAC,OAAD,CAAU,CACpBuB,QAAQ,CAAE,IADU,CAEpBG,OAAO,CAAE,sEAFW,CAAV,CAFd,MAME,SAAS,CAAC,wBANZ,CAOE,WAAW,CAAC,eAPd,GADF,EAfF,GAFF,cAgCE,YAAK,SAAS,CAAC,aAAf,uBACE,YAAK,SAAS,CAAC,KAAf,uBACE,0CACE,IAAI,CAAC,MADP,EAEM1B,QAAQ,CAAC,SAAD,CAAY,CACtBuB,QAAQ,CAAE,CAAEC,KAAK,CAAE,IAAT,CAAeL,OAAO,CAAE,wBAAxB,CADY,CAEtBM,SAAS,CAAE,CACTD,KAAK,CAAE,EADE,CAETL,OAAO,CAAE,qCAFA,CAFW,CAAZ,CAFd,MASE,SAAS,CAAC,wBATZ,CAUE,WAAW,CAAC,eAVd,GADF,EADF,EAhCF,cAmDE,YAAK,SAAS,CAAC,aAAf,uBACE,YAAK,SAAS,CAAC,KAAf,uBACE,6CACE,IAAI,CAAE,CADR,EAEMnB,QAAQ,CAAC,SAAD,CAAY,CACtBuB,QAAQ,CAAE,IADY,CAAZ,CAFd,MAKE,SAAS,CAAC,wBALZ,CAME,WAAW,CAAC,6BANd,GADF,EADF,EAnDF,cA+DE,eAAQ,SAAS,CAAC,YAAlB,CAA+B,IAAI,CAAC,QAApC,oBA/DF,GADF,EADF,cAsEC,KAAC,cAAD,IAtED,GADF,EADF,EADF,EADF,CAgFD,CAxHD,CA0HA,cAAexB,CAAAA,WAAf","sourcesContent":["import { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst ContactForm = () => {\n  const { register, errors, handleSubmit, reset } = useForm();\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  const onSubmit = async (data) => {\n    // Send form email\n    try {\n      const templateParams = {\n        name: data.name,\n        email: data.email,\n        subject: data.subject,\n        message: data.message\n      };\n\n      await emailjs.send(\n        'service_59ne85j',\n        'template_7p1hni4',\n        templateParams,\n        'user_3tpPmE2mQehL0DomGKYQz'\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className='ContactForm'>\n      <div className='ContactContainer'>\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <div className='contactForm'>\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n                {/* Row 1 of form */}\n                <div className='row formRow'>\n                  <div className='col-6'>\n                    <input\n                      type='text'\n                      {...register('name', {\n                        required: { value: true, message: 'Please enter your name' },\n                        maxLength: {\n                          value: 30,\n                          message: 'Please use 30 characters or less'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Name'></input>\n                    {/* {errors.name && <span className='errorMessage'>{errors.name.message}</span>} */}\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='email'\n                      {...register('email', {\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                      })}\n                      className='form-control formInput'\n                      placeholder='Email address'></input>\n                    {/* {errors.email && (\n                      <span className='errorMessage'>Please enter a valid email address</span>\n                    )} */}\n                  </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <input\n                      type='text'\n                      {...register('subject', {\n                        required: { value: true, message: 'Please enter a subject' },\n                        maxLength: {\n                          value: 75,\n                          message: 'Subject cannot exceed 75 characters'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Business Name'></input>\n                    {/* {errors.subject && (\n                      <span className='errorMessage'>{errors.subject.message}</span>\n                    )} */}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <textarea\n                      rows={3}\n                      {...register('message', {\n                        required: true\n                      })}\n                      className='form-control formInput'\n                      placeholder='Tell me about your business'></textarea>\n                    {/* {errors.message && <span className='errorMessage'>Please enter a message</span>} */}\n                  </div>\n                </div>\n                <button className='submit-btn' type='submit'>\n                  Submit\n                </button>\n              </form>\n            </div>\n           <ToastContainer></ToastContainer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}